@model IEnumerable<Izakayamvc.ViewModels.Vms.PaymentsHistoryVm>

@{
    ViewBag.Title = "History";
}


<div class="container-fluid">
    <div class="row justify-content-center text-center">
        <h2>歷史訂單查詢</h2>
    </div>
    <form method="get" action="@Url.Action("History")" class="mt-3" id="form1">
        <div class="row mt-3 justify-content-around">
            <div class="col-9">
                <div class="row align-items-end">
                    <div class="col">
                        <label for="StartTime" class="form-label">起始日期</label>
                        <input type="datetime-local" class="form-control form-control-sm" id="StartTime" name="StartTime" placeholder="起始日期" value="@ViewBag.StartTime.ToString("yyyy-MM-ddTHH:mm")" />
                    </div>
                    <div class="col">
                        <label for="EndTime" class="form-label">結束日期</label>
                        <input type="datetime-local" class="form-control form-control-sm" id="EndTime" name="EndTime" placeholder="結束日期" value="@ViewBag.EndTime.ToString("yyyy-MM-ddTHH:mm")" />
                    </div>
                    <div class="col">
                        <label for="searchbtn" class="form-label"></label>
                        <button type="submit" id="searchbtn" class="btn btn-outline-primary">篩選</button>
                    </div>
                </div>
            </div>
            <div class="col-3 align-self-end">
                <div class="row align-items-end">
                    <div class="col-8">
                        <input type="text" class="form-control  form-control-sm" id="Name" name="Name" placeholder="會員姓名" value="@ViewBag.Name" />
                    </div>
                    <div class="col-4">
                        <button type="submit" class="btn btn-sm btn-outline-warning">查詢</button>
                    </div>
                </div>
            </div>
        </div>
    </form>
    <div class="row mt-3">
        <table class="table table-responsive rounded-3">
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.CombinedOrderId)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.MemberName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.OrderIds)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.SeatNames)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.TotalAmount)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Discount)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.NetAmount)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.PaymentMethod)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.PaymentStatus)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.BranchId)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.PaymentTime)
                </th>
                <th>
                    動作
                </th>
            </tr>

            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.CombinedOrderId)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.MemberName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.OrderIds)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.SeatNames)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.TotalAmount)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Discount)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.NetAmount)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.PaymentMethod)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.PaymentStatus)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.BranchId)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.PaymentTime)
                    </td>
                    <td>
                        <a href="javascript:void(0);" class="btn btn-sm btn-outline-success detail-link" data-id="@item.CombinedOrderId">明細</a>
                    </td>
                </tr>
            }
        </table>
    </div>
    <div class="row justify-content-center">
        <nav>
            <ul class="pagination">
                @if (ViewBag.CurrentPage > 1)
                {
                    <li class="page-item">
                        <a class="page-link" href="@Url.Action("History", new { page = ViewBag.CurrentPage - 1 , StartTime = ViewBag.StartTime, EndTime = ViewBag.EndTime, Name = ViewBag.Name})" aria-label="Previous">
                            <span aria-hidden="true">&laquo;</span>
                        </a>
                    </li>
                }

                @{
                    int pageGroup = 34;
                    int startPage = ViewBag.CurrentPage > pageGroup ? (int)((ViewBag.CurrentPage / pageGroup) * pageGroup) + 1 : 1;
                    int endPage = Math.Min(startPage + pageGroup - 1, ViewBag.TotalPages);

                    for (int i = startPage; i <= endPage; i++)
                    {
                        <li class="page-item @(ViewBag.CurrentPage == i ? "active" : "")">
                            <a class="page-link" href="@Url.Action("History", new { page = i, StartTime = ViewBag.StartTime, EndTime = ViewBag.EndTime, Name = ViewBag.Name})">@i</a>
                        </li>
                    }
                }

                @if (ViewBag.CurrentPage < ViewBag.TotalPages)
                {
                    <li class="page-item">
                        <a class="page-link" href="@Url.Action("History", new { page = ViewBag.CurrentPage + 1 , StartTime = ViewBag.StartTime, EndTime = ViewBag.EndTime, Name = ViewBag.Name})" aria-label="Next">
                            <span aria-hidden="true">&raquo;</span>
                        </a>
                    </li>
                }
            </ul>
        </nav>
    </div>
</div>


@section CSS{
    <style>
        /* 分頁控制項自定義樣式 */
        .pagination li a {
            color: #6c757d;
        }
        .pagination li.active a {
            color: #ffffff; /* 活動頁白色文字 */
            background-color: #6c757d; /* 深灰色背景 */
            border-color: #6c757d; /* 深灰色邊框 */
        }
        .pagination li a:hover {
            color: #ffffff; /* 滑鼠懸停白色文字 */
            background-color: #5e4b8b; /* 深紫色背景 */
            border-color: #5e4b8b; /* 深紫色邊框 */
        }
    </style>
}


@section Scripts {
    <script>
        document.addEventListener("DOMContentLoaded", function() {
            document.querySelectorAll('.detail-link').forEach(function(link) {
                link.addEventListener('click', async function (e) {
                    e.preventDefault(); 
                    const id = this.getAttribute('data-id');
                    try {
                        // 發送異步請求到後端
                        let response = await fetch('@Url.Content("~/api/OrderPaymentApiController/GetDetails")' + '?combinedOrderId=' + id);
                        if (!response.ok) {
                            throw new Error('網路錯誤請確認!');
                        }
                        let result = await response.json();

                        let orderDetails = result.data;

                        let htmlContent = `
                            <p>訂單編號: ${orderDetails.orderNumber}</p>
                            <p>日期: ${formatDate(orderDetails.date)}</p>
                            <p>總計: NT$${orderDetails.total}</p>
                            <h4>訂單項目:</h4>`;

                        orderDetails.items.forEach(item => {
                            htmlContent += `
                                <div>
                                    <p>${item.name} 數量: ${item.qty}，價格: ${item.price}</p>
                                </div>
                            `;
                        });

                        if(result.success) {
                            Swal.fire({
                                title: '訂單明細',
                                html: htmlContent,
                                icon: 'info'
                            });
                        } else {
                            Swal.fire('錯誤', result.message, 'error');
                        }
                    } catch (error) {
                        Swal.fire('錯誤', '無法取得訂單明細', 'error');
                    }
                });
            });
            //格式化日期
            function formatDate(date) {
                const d = new Date(date);
                const year = d.getFullYear();
                const month = ('0' + (d.getMonth() + 1)).slice(-2); // 月份是從0開始的
                const day = ('0' + d.getDate()).slice(-2);
                const hour = ('0' + d.getHours()).slice(-2);
                const minute = ('0' + d.getMinutes()).slice(-2);
                const second = ('0' + d.getSeconds()).slice(-2);
                return `${year}-${month}-${day} ${hour}:${minute}:${second}`;
            }

        });
    </script>
}
